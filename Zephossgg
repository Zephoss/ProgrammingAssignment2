## Some of the functions used to compute for the following inverse of a matrix
## This show how the matrix can really be solve
makeCacheMatrix <- function(x = matrix() {
  inverse <- NULL
  set <- function(z) {
    x <<- z
    inverse <<- NULL
  }
  get <- function() return (z);
  setsolve <- function(solve) inverse <<- solve
  getsolve <- function()
  list(set = set, get = get,
       setsolve = setsolve,
       getsolve = getsolve)
#on the other hand this show how to calculate the given matrix
#making sure that the matrix in inverse and accurate
}
cacheSolve <- function(z, ...) {
  inverse <- x$getsolve()
  if(!is.null(inverse)) {
    message("getting inversed matrix")
    return(inverse)
  }
  data <- x$get()
  inverse <- solve(data, ...)
  x$setsolve(inverse)
  inverse
}
