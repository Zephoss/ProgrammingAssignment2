## Some of the functions used to compute for the following inverse of a matrix
## This show how the matrix can really be solve
makeCacheMatrix <- function(x = matrix() {
  inverse <- NULL
  go <- function(z) {
    x <<- z
    inverse <<- NULL
  }
  Calculate <- function() return (z);
  gosolve <- function(solve) inverse <<- solve
  gosolve <- function()
  list(solvematrix = solvemartix, go = go,
       gosolve = solvematix,
       gosolve = solvematix)
##on the other hand this show how to calculate the given matrix
##making sure that the matrix in inverse and accurate
}
cacheSolve <- function(z, ...) {
  inverse <- x$getsolve()
  if(!is.null(inverse)) {
    message("calculating the given matrix")
    return(inverse)
  }
  data <- x$go()
  inverse <- solve(data, ...)
  x$gosolve(inverse)
  inverse
}
